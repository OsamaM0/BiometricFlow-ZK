# =================================================================
# BiometricFlow-ZK Monitoring Stack (Docker Compose)
# =================================================================
# Complete monitoring solution with Prometheus, Grafana, and alerting

version: '3.8'

services:
  # =================================================================
  # Prometheus - Metrics Collection
  # =================================================================
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: biometric-prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    networks:
      - biometric-monitoring
      - biometric-network
    depends_on:
      - node-exporter
      - cadvisor
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=prometheus"
      - "com.biometricflow.description=Metrics collection and storage"

  # =================================================================
  # Grafana - Visualization and Dashboards
  # =================================================================
  grafana:
    image: grafana/grafana:10.0.3
    container_name: biometric-grafana
    hostname: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=BiometricFlow2025!
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel,grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_ALERTING_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/alerting:/etc/grafana/provisioning/alerting:ro
    networks:
      - biometric-monitoring
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=grafana"
      - "com.biometricflow.description=Metrics visualization and dashboards"

  # =================================================================
  # Node Exporter - Host Metrics
  # =================================================================
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: biometric-node-exporter
    hostname: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - biometric-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=node-exporter"
      - "com.biometricflow.description=Host system metrics exporter"

  # =================================================================
  # cAdvisor - Container Metrics
  # =================================================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: biometric-cadvisor
    hostname: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    networks:
      - biometric-monitoring
    privileged: true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=cadvisor"
      - "com.biometricflow.description=Container resource usage metrics"

  # =================================================================
  # AlertManager - Alert Management
  # =================================================================
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: biometric-alertmanager
    hostname: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    networks:
      - biometric-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=alertmanager"
      - "com.biometricflow.description=Alert management and routing"

  # =================================================================
  # Loki - Log Aggregation
  # =================================================================
  loki:
    image: grafana/loki:2.9.0
    container_name: biometric-loki
    hostname: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command:
      - -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - biometric-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=loki"
      - "com.biometricflow.description=Log aggregation and storage"

  # =================================================================
  # Promtail - Log Collection
  # =================================================================
  promtail:
    image: grafana/promtail:2.9.0
    container_name: biometric-promtail
    hostname: promtail
    restart: unless-stopped
    command:
      - -config.file=/etc/promtail/config.yml
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./logs:/app/logs:ro
    networks:
      - biometric-monitoring
    depends_on:
      - loki
    labels:
      - "com.biometricflow.service=promtail"
      - "com.biometricflow.description=Log collection and forwarding"

  # =================================================================
  # Blackbox Exporter - Endpoint Monitoring
  # =================================================================
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: biometric-blackbox-exporter
    hostname: blackbox-exporter
    restart: unless-stopped
    ports:
      - "9115:9115"
    volumes:
      - ./monitoring/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - biometric-monitoring
      - biometric-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9115/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=blackbox-exporter"
      - "com.biometricflow.description=Endpoint availability monitoring"

  # =================================================================
  # Redis - Caching and Session Storage
  # =================================================================
  redis:
    image: redis:7.2-alpine
    container_name: biometric-redis
    hostname: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass BiometricFlow2025!
    volumes:
      - redis_data:/data
    networks:
      - biometric-monitoring
      - biometric-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.biometricflow.service=redis"
      - "com.biometricflow.description=Caching and session storage"

# =================================================================
# Networks
# =================================================================
networks:
  biometric-monitoring:
    driver: bridge
    name: biometric-monitoring-network
    ipam:
      config:
        - subnet: 172.23.0.0/16
    labels:
      - "com.biometricflow.network=monitoring"

  biometric-network:
    external: true
    name: biometric-flow-network

# =================================================================
# Volumes
# =================================================================
volumes:
  prometheus_data:
    driver: local
    name: biometric-prometheus-data
    labels:
      - "com.biometricflow.volume=prometheus-data"

  grafana_data:
    driver: local
    name: biometric-grafana-data
    labels:
      - "com.biometricflow.volume=grafana-data"

  alertmanager_data:
    driver: local
    name: biometric-alertmanager-data
    labels:
      - "com.biometricflow.volume=alertmanager-data"

  loki_data:
    driver: local
    name: biometric-loki-data
    labels:
      - "com.biometricflow.volume=loki-data"

  redis_data:
    driver: local
    name: biometric-redis-data
    labels:
      - "com.biometricflow.volume=redis-data"
