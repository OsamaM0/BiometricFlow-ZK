# =================================================================
# BiometricFlow-ZK Kubernetes Namespace
# =================================================================
apiVersion: v1
kind: Namespace
metadata:
  name: biometric-flow
  labels:
    name: biometric-flow
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/version: "3.1.0"
    app.kubernetes.io/component: namespace
---
# =================================================================
# ConfigMap for Place Backend
# =================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: place-backend-config
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: place-backend
data:
  devices_config.json: |
    {
      "location_info": {
        "name": "Kubernetes Cluster",
        "address": "Cloud Infrastructure",
        "timezone": "UTC",
        "business_hours": {
          "start": "08:00",
          "end": "18:00",
          "working_days": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]
        }
      },
      "devices": {
        "K8s_Device_1": {
          "name": "Kubernetes Device 1",
          "ip": "192.168.1.150",
          "port": 4370,
          "password": 0,
          "model": "ZK-4500",
          "capacity": 3000,
          "location": "Kubernetes Cluster - Node 1",
          "enabled": true,
          "backup_enabled": true
        }
      }
    }
---
# =================================================================
# ConfigMap for Unified Gateway
# =================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: unified-gateway-config
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: unified-gateway
data:
  backend_places_config.json: |
    {
      "places": {
        "kubernetes_place": {
          "name": "Kubernetes Place",
          "location": "Cloud Infrastructure",
          "url": "http://place-backend-service:8000",
          "timeout": 30,
          "max_concurrent_requests": 50,
          "health_endpoint": "/health",
          "enabled": true,
          "priority": 1,
          "devices": ["K8s_Device_1"],
          "description": "Kubernetes-deployed place backend"
        }
      }
    }
---
# =================================================================
# Secret for Environment Variables
# =================================================================
apiVersion: v1
kind: Secret
metadata:
  name: biometric-flow-secrets
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # These will be generated during deployment
  PLACE_BACKEND_API_KEY: "replace-with-generated-key"
  UNIFIED_GATEWAY_API_KEY: "replace-with-generated-key"
  FRONTEND_API_KEY: "replace-with-generated-key"
  JWT_SECRET: "replace-with-generated-secret"
---
# =================================================================
# Place Backend Deployment
# =================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: place-backend
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: place-backend
    app.kubernetes.io/version: "3.1.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: biometric-flow-zk
      app.kubernetes.io/component: place-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: biometric-flow-zk
        app.kubernetes.io/component: place-backend
        app.kubernetes.io/version: "3.1.0"
    spec:
      containers:
      - name: place-backend
        image: biometric-flow/place-backend:3.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: PLACE_BACKEND_PORT
          value: "8000"
        - name: PLACE_BACKEND_NAME
          value: "K8s_Place_Backend"
        - name: DEVICES_CONFIG_FILE
          value: "devices_config.json"
        - name: RATE_LIMIT_REQUESTS
          value: "50"
        - name: ALLOWED_ORIGINS
          value: "http://unified-gateway-service:9000"
        - name: PLACE_BACKEND_API_KEY
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: PLACE_BACKEND_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: JWT_SECRET
        volumeMounts:
        - name: config
          mountPath: /app/devices_config.json
          subPath: devices_config.json
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: place-backend-config
      - name: data
        persistentVolumeClaim:
          claimName: place-backend-data
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
---
# =================================================================
# Place Backend Service
# =================================================================
apiVersion: v1
kind: Service
metadata:
  name: place-backend-service
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: place-backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: place-backend
---
# =================================================================
# Unified Gateway Deployment
# =================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unified-gateway
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: unified-gateway
    app.kubernetes.io/version: "3.1.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: biometric-flow-zk
      app.kubernetes.io/component: unified-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: biometric-flow-zk
        app.kubernetes.io/component: unified-gateway
        app.kubernetes.io/version: "3.1.0"
    spec:
      containers:
      - name: unified-gateway
        image: biometric-flow/unified-gateway:3.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: UNIFIED_GATEWAY_PORT
          value: "9000"
        - name: PLACE_BACKEND_URL
          value: "http://place-backend-service:8000"
        - name: BACKEND_PLACES_CONFIG_FILE
          value: "backend_places_config.json"
        - name: RATE_LIMIT_REQUESTS
          value: "50"
        - name: ALLOWED_ORIGINS
          value: "http://frontend-service:8501"
        - name: UNIFIED_GATEWAY_API_KEY
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: UNIFIED_GATEWAY_API_KEY
        - name: PLACE_BACKEND_API_KEY
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: PLACE_BACKEND_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: JWT_SECRET
        volumeMounts:
        - name: config
          mountPath: /app/backend_places_config.json
          subPath: backend_places_config.json
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: unified-gateway-config
      - name: data
        persistentVolumeClaim:
          claimName: unified-gateway-data
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
---
# =================================================================
# Unified Gateway Service
# =================================================================
apiVersion: v1
kind: Service
metadata:
  name: unified-gateway-service
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: unified-gateway
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: unified-gateway
---
# =================================================================
# Frontend Deployment
# =================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "3.1.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: biometric-flow-zk
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: biometric-flow-zk
        app.kubernetes.io/component: frontend
        app.kubernetes.io/version: "3.1.0"
    spec:
      containers:
      - name: frontend
        image: biometric-flow/frontend:3.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8501
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: FRONTEND_PORT
          value: "8501"
        - name: UNIFIED_GATEWAY_URL
          value: "http://unified-gateway-service:9000"
        - name: SESSION_TIMEOUT
          value: "3600"
        - name: AUTO_REFRESH_INTERVAL
          value: "300"
        - name: FRONTEND_API_KEY
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: FRONTEND_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: biometric-flow-secrets
              key: JWT_SECRET
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8501
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8501
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: frontend-data
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
---
# =================================================================
# Frontend Service
# =================================================================
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: biometric-flow
  labels:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: frontend
spec:
  type: LoadBalancer
  ports:
  - port: 8501
    targetPort: 8501
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: biometric-flow-zk
    app.kubernetes.io/component: frontend
